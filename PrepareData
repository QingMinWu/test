/* * COPYRIGHT. HSBC HOLDINGS PLC 2017. ALL RIGHTS RESERVED. * * This software is only to be used for the purpose for which it has been * provided. No part of it is to be reproduced, disassembled, transmitted, * stored in a retrieval system nor translated in any human or computer * language in any way or for any other purposes whatsoever without the prior * written consent of HSBC Holdings plc. */package src;import java.io.File;import java.io.IOException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Calendar;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.commons.io.FileUtils;import org.apache.commons.io.LineIterator;import ui.PrepareDataUI;import utils.DateUtils;import utils.NoteLogs;import utils.SftpConnect;/** * <p> * <b> TODO : Insert description of the class's responsibility/role. </b> * </p> */public class PrepareData {    private String oldName;    private String newName;    private String prefix;    private String suffix;    public void Files(final Map configMap) throws Exception {        String result;        File oldFile;        File newFile;        List<Map> fileList = (List) configMap.get("FileList");        Map fileDetail = new HashMap();        String[] content;        String contentFormat;        String contentPath;        String templateFolder = configMap.get("TemplateFolder").toString();        String runDate = configMap.get("RunDate").toString();        String filePath = configMap.get("FileFolder").toString();        // 清空文件夹        String[] list = (new File(filePath).list());        for (int i = 0; i < list.length; i++) {            deleteFile(filePath + list[i]);        }        NoteLogs.record(DateUtils.getNowDate());        File templateFile = new File(templateFolder);        File[] templateList = templateFile.listFiles();        for (int num = 0; num < templateList.length; num++) {            oldFile = templateList[num];            for (int i = 0; i < fileList.size(); i++) {                fileDetail = (Map) fileList.get(i);                content = fileDetail.get("fileContent").toString().split(";");                contentFormat = content[0];                contentPath = content[1];                contentPath = contentPath.replace("$env$", configMap.get("Env").toString());                this.prefix = fileDetail.get("fileName").toString();                // 匹配文件，如果包含指定前缀就进行重命名以及文件内容替换                if (((templateList[num].toString().indexOf(this.prefix)) > 0)) {                    // rename and move file                    newFile = renameFile(filePath, oldFile, runDate);                    // replace File                    replaceFileData(newFile, runDate, contentFormat);                    PrepareDataUI.show("create file--" + this.newName);                    // upload File to the Server                    uploadFile(newFile, contentPath, configMap);                    PrepareDataUI.show("uploadFile to server--" + this.newName);                    continue;                }            }        }        PrepareDataUI.startFlag = 0;    }    public File renameFile(final String filePath, final File oldFile, final String date) throws Exception {        this.oldName = oldFile.getName().toString();        this.suffix = this.oldName.substring(this.oldName.indexOf("."));        this.newName = this.prefix + date + this.suffix;        File newFile = new File(filePath + File.separator + this.newName);        if (!newFile.isFile()) {            FileUtils.copyFile(oldFile, newFile);        }        return newFile;    }    public void replaceFileData(final File file, final String runDate, final String format) throws Exception {        String lastDate = null;        String currDate = runDate;        try {            // 将String类型转化为日期格式，然后进行日期加减            SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");            Date date = sdf.parse(runDate);            Calendar c = Calendar.getInstance();            c.setTime(date);            // 判断process date是否周一，如果是的话date-1为上周五            if (c.get(Calendar.DAY_OF_WEEK) == 2) {                c.add(Calendar.DATE, -3);            } else {                c.add(Calendar.DATE, -1);            }            date = c.getTime();            // 将日期格式转化为String类型            lastDate = sdf.format(date);            // 得出前一天的时间格式            lastDate = dateFormat(lastDate, format);        } catch (Exception e) {            e.printStackTrace();        }        // 得出process date的时间格式        currDate = dateFormat(currDate, format);        // StringBuffer stringBuf = new StringBuffer();        List<String> lines = new ArrayList<String>();        LineIterator lineIter = null;        String line;        try {            // 读取文件内容，替换指定日期            lineIter = FileUtils.lineIterator(file);            while (lineIter.hasNext()) {                line = lineIter.nextLine();                if (line.contains("$date$")) {                    line = line.replace("$date$", currDate);                }                if (line.contains("$date-1$")) {                    line = line.replace("$date-1$", lastDate);                }                lines.add(line);            }            FileUtils.writeLines(file, "UTF-8", lines);        } catch (IOException e) {            e.printStackTrace();        } finally {            LineIterator.closeQuietly(lineIter);        }    }    public void uploadFile(final File file, final String destination, final Map config) throws Exception, IOException {        String host = config.get("ServerHost").toString();        String user = config.get("ServerUser").toString();        String pwd = config.get("ServerPwd").toString();        SftpConnect sftp = new SftpConnect(host, user, pwd);        sftp.login();        sftp.uploadFile(file, destination);    }    private String dateFormat(final String date, final String format) {        String finalDate;        String yyyy;        String mm;        String dd;        yyyy = date.substring(0, 4);        mm = date.substring(4, 6);        dd = date.substring(6, 8);        finalDate = format.replace("yyyy", yyyy);        finalDate = finalDate.replace("mm", mm);        finalDate = finalDate.replace("dd", dd);        return finalDate;    }    private void deleteFile(final String path) {        File file = new File(path);        if (!file.exists()) {            return;        }        file.delete();    }    public static void main(final String[] args) throws Exception {    }}
